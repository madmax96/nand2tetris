// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load==1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    And(a=address[14], b=address[13], out=ISKEYBOARDACCESS);
    // address[14] - highest significant bit will be 0 for RAM access
    Xor(a=address[14], b=true, out=ISRAMACCESS);
    Mux(a=address[14], b=false, sel=ISKEYBOARDACCESS,out=ISSCREENACCESS);

    And(a=load, b=ISRAMACCESS, out=LOADRAM);
    And(a=load, b=ISSCREENACCESS, out=LOADSCREEN);
    RAM16K(in=in, load=LOADRAM, address=address[0..13], out=OUTRAM); // 14 bits address

    // SUbtract 18384 from address to get Screen address
    // Add16(a[15]=false,a[0..14]=address, b[0..13]=false,b[14]=true,b[15]=true,out[0..12]=SCREENADDRESS);

    Screen(in=in, load=LOADSCREEN, address[0..12]=address[0..12], out=OUTSCREEN); // 13 bits address
    Keyboard(out=OUTKEYBOARD); //1 bit address

    Mux16(a=OUTRAM, b=OUTSCREEN, sel=ISSCREENACCESS, out=OUTRAMORSCREEN);
    Mux16(a=OUTRAMORSCREEN, b=OUTKEYBOARD, sel=ISKEYBOARDACCESS, out=out);
}